

####################################################################
[ ca ]

default_ca    = CA_default      # The default ca section

[ CA_default ]

default_days     = 365         # How long to certify for
default_crl_days = 3           # How long before next CRL
default_md       = sha256       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert
certificatePolicies = 1.3.76.47.4	# see http://oid-info.com/cgi-bin/display?oid=1.3.76.47

name_opt          = ca_default
cert_opt          = ca_default

policy            = policy_test

[ policy_test ]

countryName             = match
stateOrProvinceName     = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

####################################################################

[ req ]

default_bits		= 384
default_keyfile		= aspsp_key.pem
distinguished_name	= req_distinguished_name
distinguished_name  = req_distinguished_name
#attributes              = req_attributes
#x509_extensions = v3_ca # The extentions to add to the self signed cert
#req_extensions  = v3_req
#x509_extensions = usr_cert
string_mask			= utf8only
#prompt				= no
default_md          = sha256

####################################################################

[ req_distinguished_name ]

countryName         = Country Name (2 letter code)
countryName_default =IT

stateOrProvinceName         = State or Province Name (full name)
stateOrProvinceName_default =Flatland

localityName                = Locality Name (eg, city)
localityName_default        =A Neighbourhood

organizationName            = Organization Name (eg, company)
organizationName_default    =Seeley & Co. of Rome

organizationalUnitName         = Organizational Unit (eg, division)
organizationalUnitName_default =The Caste of Gentlemen and Professionals

commonName         = Common Name (e.g. server FQDN or YOUR name)
commonName_default =SpheriCAl

emailAddress         = Email Address
emailAddress_default =a.square@flat.land

####################################################################

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:10
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ server_authentication ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE, pathlen:0
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, codeSigning

[ v3_req_server_authentication ]
extendedKeyUsage = serverAuth, codeSigning
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment

[ server_nonRepudiation ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE, pathlen:0
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, nonRepudiation

[ v3_req_server_nonRepudiation ]
basicConstraints = CA:FALSE
keyUsage = critical, nonRepudiation

[ client_authentication ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE, pathlen:0
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ client_nonRepudiation ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE, pathlen:0
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE, pathlen:0
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
